@page "/trades"
@using StockTracker.Data
@using System.Data;
@using MySqlConnector;

@inject IConfiguration configuration;

<PageTitle>Trades</PageTitle>

<AddTrade/>
<br/><br/>

<h3>Trades</h3>

@if(trades == null)
{
    <p>Loading...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Symbol</th>
                <th>Type</th>
                <th>Description</th>
                <th>Quantity</th>
                <th>Cash</th>
                <th>Units Held</th>
            </tr>
        </thead>
        <tbody>
            @foreach(DbTrades trade in trades)
            {
                <tr>
                    <td>@trade.Date</td>
                    <td>@trade.Symbol</td>
                    <td>@trade.Type</td>
                    <td>@trade.Description</td>
                    <td>@trade.Qty</td>
                    <td>@trade.Cash</td>
                    <td>@trade.UnitsHeld</td>
                </tr>
            }
        </tbody>
    </table>
}

@code
{
    private List<DbTrades>? trades;

    protected override async Task OnInitializedAsync()
    {
        MySqlConnection conn = new MySqlConnection(configuration["ConnectionStrings:Default"]);
        await conn.OpenAsync();
        trades = new List<DbTrades>();
        MySqlCommand cmd = new MySqlCommand("SELECT * FROM trades ORDER BY date DESC", conn);
        MySqlDataReader reader = await cmd.ExecuteReaderAsync();
        while(await reader.ReadAsync())
        {
            trades.Add(new DbTrades(reader.GetDateOnly("date"),
                                    reader.GetValue("symbol").ToString(),
                                    reader.GetValue("type").ToString(),
                                    reader.GetValue("description").ToString(),
                                    reader.GetDecimal("qty"),
                                    reader.GetDecimal("cash"),
                                    reader.GetDecimal("unitsHeld")));
        }
        await conn.CloseAsync();
    }
}
