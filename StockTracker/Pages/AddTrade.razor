@using System.Data;
@using MySqlConnector;

@inject IConfiguration configuration;

<input type="date" @bind="inpDate" />
<select @bind="@inpStock">
    @if(stocks != null)
    {
        foreach(KeyValuePair<string, string> stock in stocks)
        {
            <option value=@stock.Value>@stock.Key</option>
        }
    }
</select>
<select @bind="inpType">
    <option>BUY</option>
    <option>SELL</option>
    <option>DIV</option>
</select>
<br />
Description: <input @bind="inpDescription" style="width:15%" />
Quantity: <input @bind="inpQty" style="width:10%" />
Cash: <input @bind="inpCash" style="width:10%" />
<button class="btn btn-primary" @onclick="AddTradeAsync">Add</button>

@code
{
    private List<KeyValuePair<string, string>>? stocks;

    //Bound fields for inputs
    private DateOnly? inpDate;
    private string? inpStock;
    private string? inpType;
    private string? inpDescription;
    private decimal inpQty;
    private decimal inpCash;

    protected override async Task OnInitializedAsync()
    {
        //Set date picker to today
        inpDate = DateOnly.FromDateTime(DateTime.Today);

        //Populate stocks dropdown from database
        stocks = new List<KeyValuePair<string, string>>();
        MySqlConnection conn = new MySqlConnection(configuration["ConnectionStrings:Default"]);
        await conn.OpenAsync();
        MySqlCommand cmd = new MySqlCommand("SELECT * FROM stock", conn);
        MySqlDataReader reader = await cmd.ExecuteReaderAsync();
        while(await reader.ReadAsync())
        {
            stocks.Add(new KeyValuePair<string, string>(String.Format("{0} - {1}", reader.GetString(0), reader.GetString(1)), reader.GetString(0)));
        }
        await conn.CloseAsync();

        //Set default values for dropdowns
        inpStock = stocks[0].Value;
        inpType = "BUY";
    }

    private async void AddTradeAsync()
    {
        MySqlConnection conn = new MySqlConnection(configuration["ConnectionStrings:Default"]);
        await conn.OpenAsync();

        //First get latest UnitsHeld
        MySqlCommand cmd = new MySqlCommand("SELECT unitsHeld FROM trades WHERE symbol = @symbol ORDER BY date DESC LIMIT 1", conn);
        cmd.Parameters.AddWithValue("symbol", inpStock);
        object? units = await cmd.ExecuteScalarAsync();
        decimal decUnits = units == null ? 0 : (decimal)units;

        //Now insert new trade
        //TODO this is a very basic implementation here. Need to validate inputs. Can set sign of cash column based on type. BUY is always negative, SELL is always positive, DIV is always 0.
        //Also is it possible to refresh the page so the newly inserted trade is displayed?
        cmd = new MySqlCommand("INSERT INTO trades(date, symbol, type, description, qty, cash, unitsHeld) values(@date, @symbol, @type, @description, @qty, @cash, @unitsHeld)", conn);
        cmd.Parameters.AddWithValue("date", inpDate);
        cmd.Parameters.AddWithValue("symbol", inpStock);
        cmd.Parameters.AddWithValue("type", inpType);
        cmd.Parameters.AddWithValue("description", inpDescription);
        cmd.Parameters.AddWithValue("qty", inpQty);
        cmd.Parameters.AddWithValue("cash", inpCash);
        cmd.Parameters.AddWithValue("unitsHeld", decUnits + inpQty);
        await cmd.ExecuteNonQueryAsync();

        await conn.CloseAsync();
    }
}
